#!/bin/bash -e

SITE_HOSTNAME="127.0.0.1"
TESTS_EXIT_CODE=0

function check_debug_log() {
    grep -vq "PHP (Warning|Error|Fatal)" wp-content/debug.log
    if [ $? -ne 0 ]; then
        echo -e "\033[31mProblems found in wp-content/debug.log\033[0m"
        grep "PHP (Warning|Error|Fatal)" wp-content/debug.log
        TESTS_EXIT_CODE=1
    fi
}

function reset_debug_log() {
    rm -rf wp-content/debug.log
    touch wp-content/debug.log
    chmod 666 wp-content/debug.log
}

function test_url() {
    local PATH="$1"
    reset_debug_log
    curl -o /dev/null -w "%{http_code}" "http://$SITE_HOSTNAME$PATH"
    if [ $? -ne 0 ]; then
        echo -e "\033[31mRequest failed\033[0m"
        TESTS_EXIT_CODE=1
    fi
    check_debug_log
}

cd /var/www/html
wp --version --allow-root

# Add hostname to /etc/hosts so we can request it later
# echo "127.0.0.1 $SITE_HOSTNAME" | tee -a /etc/hosts

wp --allow-root core install --url="http://$SITE_HOSTNAME" --title="Example Site" --admin_user="admin" --admin_email="admin@example.com"

# activate first theme
# or iterate through them and find a child theme
echo "TODO activating theme"

# TODO catch warning here
# (like wordpress-seo on wp 5.5.1)
echo "Activating all plugins"
wp --allow-root plugin activate --all

echo "Enabling debug log"
wp --allow-root config set WP_DEBUG true --raw --type=constant
wp --allow-root config set WP_DEBUG_LOG true --raw --type=constant

# Any failures after here need to be captured
# and reported at the end (ideally run all tests possible even if some fail)
set +e

echo "Requesting homepage and checking for errors"
test_url "/"

echo "Requesting wp-login.php and checking for errors"
test_url "/wp-login.php"

exit "$TESTS_EXIT_CODE"
