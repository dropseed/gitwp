#!/bin/bash -e

SITE_HOSTNAME="127.0.0.1"
TESTS_EXIT_CODE=0

function bold() {
    echo -e "\033[1m$1\033[0m"
}

function error() {
    echo -e "\033[31m$1\033[0m" 1>&2
}

function check_debug_log() {
    grep "PHP (Warning|Error|Fatal)" wp-content/debug.log
    if [ $? == 0 ]; then
        error "Problems found in wp-content/debug.log"
        TESTS_EXIT_CODE=1
    fi
}

function reset_debug_log() {
    rm -rf wp-content/debug.log
    touch wp-content/debug.log
    chmod 666 wp-content/debug.log
}

function test_url() {
    local URL_PATH="$1"
    reset_debug_log
    curl -L -f -s -o /dev/null -w "%{http_code}" "http://$SITE_HOSTNAME$URL_PATH"
    if [ $? -ne 0 ]; then
        error "Request failed: $URL_PATH"
        TESTS_EXIT_CODE=1
    fi
    check_debug_log
}

cd /var/www/html
wp --version --allow-root

wp --allow-root core install --url="http://$SITE_HOSTNAME" --title="Example Site" --admin_user="admin" --admin_email="admin@example.com"

bold "Activating theme"
for theme in $(wp --allow-root theme list --field=name --status=inactive); do
    # inactivate eliminates parent themes
    echo "Activating theme: $theme"
    wp --allow-root theme activate "$theme"
    break
done

bold "Activating all plugins"
for plugin in $(wp --allow-root plugin list --field=name); do
    echo "Activating plugin: $plugin"
    wp --allow-root plugin activate "$plugin"
done

bold "Enabling debug log"
wp --allow-root config set WP_DEBUG true --raw --type=constant
wp --allow-root config set WP_DEBUG_LOG true --raw --type=constant

# Any failures after here need to be captured
# and reported at the end (ideally run all tests possible even if some fail)
set +e

bold "Requesting homepage and checking for errors"
test_url "/"

bold "Requesting wp-login.php and checking for errors"
test_url "/wp-login.php"

exit "$TESTS_EXIT_CODE"
